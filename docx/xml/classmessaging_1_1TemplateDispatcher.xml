<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classmessaging_1_1TemplateDispatcher" kind="class" prot="public">
    <compoundname>messaging::TemplateDispatcher</compoundname>
    <includes refid="template__dispatcher_8h" local="no">template_dispatcher.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>PreviousDispatcher</declname>
        <defname>PreviousDispatcher</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Msg</declname>
        <defname>Msg</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Func</declname>
        <defname>Func</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmessaging_1_1TemplateDispatcher_1a1c84a8173b54823d7b95db4d4865e134" prot="private" static="no" mutable="no">
        <type><ref refid="classmessaging_1_1Queue" kindref="compound">Queue</ref> *</type>
        <definition>Queue* messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::queue_ptr_</definition>
        <argsstring></argsstring>
        <name>queue_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="46" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmessaging_1_1TemplateDispatcher_1a873bc46a8c8cff1ddcceb225ad252e01" prot="private" static="no" mutable="no">
        <type>PreviousDispatcher *</type>
        <definition>PreviousDispatcher* messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::prev_ptr_</definition>
        <argsstring></argsstring>
        <name>prev_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="47" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmessaging_1_1TemplateDispatcher_1aae5b9ea3d2b58005b6ddec368db2bcb0" prot="private" static="no" mutable="no">
        <type>Func</type>
        <definition>Func messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::func_</definition>
        <argsstring></argsstring>
        <name>func_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="48" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmessaging_1_1TemplateDispatcher_1a51f4255d452392ab1ca7d193d3209d4a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::chained_</definition>
        <argsstring></argsstring>
        <name>chained_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="49" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmessaging_1_1TemplateDispatcher_1ac52eebabf93ac84bc8eacc5c67e6ca9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classmessaging_1_1Dispatcher" kindref="compound">Dispatcher</ref></type>
          </param>
          <param>
            <type>class OtherMsg</type>
          </param>
          <param>
            <type>class OtherFunc</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class TemplateDispatcher</definition>
        <argsstring></argsstring>
        <name>TemplateDispatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="53" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1ada53b5ba67f04fa2a8420cded172fdd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::TemplateDispatcher</definition>
        <argsstring>(TemplateDispatcher &amp;&amp;other)</argsstring>
        <name>TemplateDispatcher</name>
        <param>
          <type><ref refid="classmessaging_1_1TemplateDispatcher" kindref="compound">TemplateDispatcher</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="16" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1a00aff7fdf1654ddfc2389d719b949427" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::TemplateDispatcher</definition>
        <argsstring>(Queue *queue, PreviousDispatcher *prev_ptr, Func &amp;&amp;func)</argsstring>
        <name>TemplateDispatcher</name>
        <param>
          <type><ref refid="classmessaging_1_1Queue" kindref="compound">Queue</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type>PreviousDispatcher *</type>
          <declname>prev_ptr</declname>
        </param>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="23" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="23" bodyend="29"/>
        <references refid="classmessaging_1_1TemplateDispatcher_1a873bc46a8c8cff1ddcceb225ad252e01" compoundref="template__dispatcher_8h" startline="47">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::prev_ptr_</references>
      </memberdef>
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1a7ef05880e531ba95632f7c7e0c78f4a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::TemplateDispatcher</definition>
        <argsstring>(const TemplateDispatcher &amp;)=delete</argsstring>
        <name>TemplateDispatcher</name>
        <param>
          <type>const <ref refid="classmessaging_1_1TemplateDispatcher" kindref="compound">TemplateDispatcher</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1a5d5e246da02eb04699e03cf40a129076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmessaging_1_1TemplateDispatcher" kindref="compound">TemplateDispatcher</ref> &amp;</type>
        <definition>TemplateDispatcher&amp; messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::operator=</definition>
        <argsstring>(const TemplateDispatcher &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmessaging_1_1TemplateDispatcher" kindref="compound">TemplateDispatcher</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1a06911b99af5573acede1d78ab6c4aa4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherMsg</type>
          </param>
          <param>
            <type>class OtherFunc</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmessaging_1_1TemplateDispatcher" kindref="compound">TemplateDispatcher</ref>&lt; <ref refid="classmessaging_1_1TemplateDispatcher" kindref="compound">TemplateDispatcher</ref>, OtherMsg, OtherFunc &gt;</type>
        <definition>TemplateDispatcher&lt;TemplateDispatcher, OtherMsg, OtherFunc&gt; messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::Handle</definition>
        <argsstring>(OtherFunc &amp;&amp;other_func)</argsstring>
        <name>Handle</name>
        <param>
          <type>OtherFunc &amp;&amp;</type>
          <declname>other_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="35" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="35" bodyend="38"/>
        <references refid="classmessaging_1_1TemplateDispatcher_1a1c84a8173b54823d7b95db4d4865e134" compoundref="template__dispatcher_8h" startline="46">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::queue_ptr_</references>
      </memberdef>
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1abf090c18964d34afd84af5e03e90d9b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::~TemplateDispatcher</definition>
        <argsstring>() noexcept(false)</argsstring>
        <name>~TemplateDispatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="40" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="40" bodyend="44"/>
        <references refid="classmessaging_1_1TemplateDispatcher_1a51f4255d452392ab1ca7d193d3209d4a" compoundref="template__dispatcher_8h" startline="49">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::chained_</references>
        <references refid="classmessaging_1_1TemplateDispatcher_1ab36064e19b91ff2ea8f37034b8de7f60" compoundref="template__dispatcher_8h" startline="55" endline="61">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::WaitAndDispatch</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1ab36064e19b91ff2ea8f37034b8de7f60" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::WaitAndDispatch</definition>
        <argsstring>()</argsstring>
        <name>WaitAndDispatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="55" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="55" bodyend="61"/>
        <references refid="classmessaging_1_1TemplateDispatcher_1a1c84a8173b54823d7b95db4d4865e134" compoundref="template__dispatcher_8h" startline="46">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::queue_ptr_</references>
        <references refid="classmessaging_1_1Queue_1a624adbac8b7f4b5ebf6bb0f9ab76bcc3" compoundref="queue_8h" startline="36" endline="42">messaging::Queue::WaitAndPop</references>
        <references refid="classmessaging_1_1TemplateDispatcher_1a0e8673cb9d39a44f0a8332885efbde8d" compoundref="template__dispatcher_8h" startline="63" endline="70">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::Dispatch</references>
      </memberdef>
      <memberdef kind="function" id="classmessaging_1_1TemplateDispatcher_1a0e8673cb9d39a44f0a8332885efbde8d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::Dispatch</definition>
        <argsstring>(const std::shared_ptr&lt; MessageBase &gt; &amp;msg)</argsstring>
        <name>Dispatch</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structmessaging_1_1MessageBase" kindref="compound">MessageBase</ref> &gt; &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/Public/shack/atm/template_dispatcher.h" line="63" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="63" bodyend="70"/>
        <references refid="classmessaging_1_1TemplateDispatcher_1aae5b9ea3d2b58005b6ddec368db2bcb0" compoundref="template__dispatcher_8h" startline="48">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::func_</references>
        <references refid="classmessaging_1_1TemplateDispatcher_1a873bc46a8c8cff1ddcceb225ad252e01" compoundref="template__dispatcher_8h" startline="47">messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;::prev_ptr_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="162">
        <label>messaging::TemplateDispatcher&lt; PreviousDispatcher, Msg, Func &gt;</label>
        <link refid="classmessaging_1_1TemplateDispatcher"/>
        <childnode refid="163" relation="usage">
          <edgelabel>queue_ptr_</edgelabel>
        </childnode>
      </node>
      <node id="163">
        <label>messaging::Queue</label>
        <link refid="classmessaging_1_1Queue"/>
      </node>
    </collaborationgraph>
    <location file="/root/Public/shack/atm/template_dispatcher.h" line="14" column="1" bodyfile="/root/Public/shack/atm/template_dispatcher.h" bodystart="14" bodyend="71"/>
    <listofallmembers>
      <member refid="classmessaging_1_1TemplateDispatcher_1a51f4255d452392ab1ca7d193d3209d4a" prot="private" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>chained_</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1a0e8673cb9d39a44f0a8332885efbde8d" prot="private" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>Dispatch</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1aae5b9ea3d2b58005b6ddec368db2bcb0" prot="private" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>func_</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1a06911b99af5573acede1d78ab6c4aa4f" prot="public" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>Handle</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1a5d5e246da02eb04699e03cf40a129076" prot="public" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>operator=</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1a873bc46a8c8cff1ddcceb225ad252e01" prot="private" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>prev_ptr_</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1a1c84a8173b54823d7b95db4d4865e134" prot="private" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>queue_ptr_</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1ac52eebabf93ac84bc8eacc5c67e6ca9f" prot="private" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>TemplateDispatcher</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1ada53b5ba67f04fa2a8420cded172fdd1" prot="public" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>TemplateDispatcher</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1a00aff7fdf1654ddfc2389d719b949427" prot="public" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>TemplateDispatcher</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1a7ef05880e531ba95632f7c7e0c78f4a3" prot="public" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>TemplateDispatcher</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1ab36064e19b91ff2ea8f37034b8de7f60" prot="private" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>WaitAndDispatch</name></member>
      <member refid="classmessaging_1_1TemplateDispatcher_1abf090c18964d34afd84af5e03e90d9b7" prot="public" virt="non-virtual"><scope>messaging::TemplateDispatcher</scope><name>~TemplateDispatcher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
