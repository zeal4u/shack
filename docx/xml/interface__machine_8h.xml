<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="interface__machine_8h" kind="file">
    <compoundname>interface_machine.h</compoundname>
    <includes refid="receiver_8h" local="yes">receiver.h</includes>
    <includes refid="withdraw_8h" local="yes">withdraw.h</includes>
    <includes local="no">mutex</includes>
    <includes local="no">iostream</includes>
    <includedby refid="main_8cpp" local="yes">/root/Public/shack/atm/main.cpp</includedby>
    <incdepgraph>
      <node id="267">
        <label>/root/Public/shack/atm/interface_machine.h</label>
        <link refid="interface_machine.h"/>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
      </node>
      <node id="272">
        <label>queue</label>
      </node>
      <node id="269">
        <label>queue.h</label>
        <link refid="queue_8h"/>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>string</label>
      </node>
      <node id="274">
        <label>sender.h</label>
        <link refid="sender_8h"/>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="278">
        <label>withdraw.h</label>
        <link refid="withdraw_8h"/>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="268">
        <label>receiver.h</label>
        <link refid="receiver_8h"/>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
      </node>
      <node id="276">
        <label>template_dispatcher.h</label>
        <link refid="template__dispatcher_8h"/>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>condition_variable</label>
      </node>
      <node id="275">
        <label>dispatcher.h</label>
        <link refid="dispatcher_8h"/>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>utility</label>
      </node>
      <node id="280">
        <label>iostream</label>
      </node>
      <node id="270">
        <label>mutex</label>
      </node>
      <node id="273">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="281">
        <label>/root/Public/shack/atm/interface_machine.h</label>
        <link refid="interface_machine.h"/>
        <childnode refid="282" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>/root/Public/shack/atm/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classInterfaceMachine" prot="public">InterfaceMachine</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>zeal4u<sp/>on<sp/>2019/3/28.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author<sp/>:<sp/>zeal4u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Email<sp/>:<sp/>jsz1995@live.com</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description<sp/>:<sp/>Interface<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHACK_INTERFACE_MACHINE_H</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHACK_INTERFACE_MACHINE_H</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="receiver_8h" kindref="compound">receiver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="withdraw_8h" kindref="compound">withdraw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classInterfaceMachine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classInterfaceMachine" kindref="compound">InterfaceMachine</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17" refid="classInterfaceMachine_1acfe81f2fdc61f1136d754b8f239e57ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterfaceMachine_1acfe81f2fdc61f1136d754b8f239e57ea" kindref="member">Done</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classInterfaceMachine_1a9b431c811e91a9a33254151b1734fd3a" kindref="member">GetSender</ref>().<ref refid="classmessaging_1_1Sender_1a5f8d8f2fa560996d8f224cc0f10d8f8c" kindref="member">Send</ref>(<ref refid="classmessaging_1_1CloseQueue" kindref="compound">messaging::CloseQueue</ref>());<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classInterfaceMachine_1a046f9d3bb23bf7e0b53e68ad152d755d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classInterfaceMachine_1a046f9d3bb23bf7e0b53e68ad152d755d" kindref="member">Run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classInterfaceMachine_1a9a6baaba223e2a23ead6e80d25c02c59" kindref="member">incoming_</ref>.<ref refid="classmessaging_1_1Receiver_1a3f0e7b541159793eaec1e0fa6802d4d2" kindref="member">Wait</ref>().<ref refid="classmessaging_1_1Dispatcher_1a6d9d0bf1da266ca951c7821bc4e84f9f" kindref="member">Handle</ref>&lt;<ref refid="structIssueMoney" kindref="compound">IssueMoney</ref>&gt;(</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIssueMoney" kindref="compound">IssueMoney</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>加锁以防止输出混乱</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Issuing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;msg.amount_<sp/>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;DisplayInsufficientFunds&gt;(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDisplayInsufficientFunds" kindref="compound">DisplayInsufficientFunds</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>funds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;DisplayEnterPin&gt;(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDisplayEnterPin" kindref="compound">DisplayEnterPin</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>you<sp/>PIN<sp/>(0-9)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;DisplayEnterCard&gt;(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDisplayEnterCard" kindref="compound">DisplayEnterCard</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>your<sp/>card<sp/>(I)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;DisplayBalance&gt;(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDisplayBalance" kindref="compound">DisplayBalance</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;The<sp/>Balance<sp/>of<sp/>your<sp/>account<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="structDisplayBalance_1ac6c41137f614b04130e57c4ca574cc7c" kindref="member">amount_</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;DisplayWithdrawalOptions&gt;(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDisplayWithdrawalOptions" kindref="compound">DisplayWithdrawalOptions</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Withdraw<sp/>50?<sp/>(w)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Display<sp/>Balance?<sp/>(b)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Cancel?<sp/>(c)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;DisplayWithdrawalCancelled&gt;(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDisplayWithdrawalCancelled" kindref="compound">DisplayWithdrawalCancelled</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Withdrawal<sp/>cancelled&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;DisplayPinIncorrectMessage&gt;(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDisplayPinIncorrectMessage" kindref="compound">DisplayPinIncorrectMessage</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;PIN<sp/>incorrect&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).Handle&lt;EjectCard&gt;(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structEjectCard" kindref="compound">EjectCard</ref><sp/>&amp;msg)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lk(<ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Ejecting<sp/>card&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="classmessaging_1_1CloseQueue" kindref="compound">messaging::CloseQueue</ref><sp/>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classInterfaceMachine_1a9b431c811e91a9a33254151b1734fd3a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmessaging_1_1Sender" kindref="compound">messaging::Sender</ref><sp/><ref refid="classInterfaceMachine_1a9b431c811e91a9a33254151b1734fd3a" kindref="member">GetSender</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classInterfaceMachine_1a9a6baaba223e2a23ead6e80d25c02c59" kindref="member">incoming_</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="classInterfaceMachine_1a00f26d214b26780bca26e8033d2d4921" kindref="member">io_mutex_</ref>;</highlight></codeline>
<codeline lineno="82" refid="classInterfaceMachine_1a9a6baaba223e2a23ead6e80d25c02c59" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmessaging_1_1Receiver" kindref="compound">messaging::Receiver</ref><sp/><ref refid="classInterfaceMachine_1a9a6baaba223e2a23ead6e80d25c02c59" kindref="member">incoming_</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif//<sp/>SHACK_INTERFACE_MACHINE_H</highlight></codeline>
    </programlisting>
    <location file="/root/Public/shack/atm/interface_machine.h"/>
  </compounddef>
</doxygen>
